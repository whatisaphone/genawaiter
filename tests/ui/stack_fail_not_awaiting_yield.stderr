error[E0726]: implicit elided lifetime not allowed here
 --> $DIR/stack_fail_not_awaiting_yield.rs:4:24
  |
4 | async fn wrong(mut co: Co<i32>) {
  |                        ^^^^^^^ help: indicate the anonymous lifetime: `Co<'_, i32>`
  |
  = note: assuming a `'static` lifetime...

error[E0499]: cannot borrow `co` as mutable more than once at a time
 --> $DIR/stack_fail_not_awaiting_yield.rs:6:15
  |
5 |     let foo = co.yield_(10);
  |               ------------- first mutable borrow occurs here
6 |     let bar = co.yield_(20);
  |               ^^^^^^^^^^^^^ second mutable borrow occurs here
7 | }
  | - first borrow might be used here, when `foo` is dropped and runs the destructor for type `impl Future<Output = <&stack::engine::Airlock<i32, ()> as genawaiter::core::Airlock>::Resume>`
